--// Variables \\--
local plr = game:GetService("Players").LocalPlayer

local function updateCharacterReferences(character)
	local hrp = character:WaitForChild("HumanoidRootPart")
		_G.Character = character
		_G.HumanoidRootPart = hrp
end
	if plr.Character then
		updateCharacterReferences(plr.Character)
	end
	plr.CharacterAdded:Connect(function(character)
    updateCharacterReferences(character)
end)

local insert = table.insert 
local character = plr.Character
local PlrHumanoidRootPart = character:WaitForChild("HumanoidRootPart")

local plr = game.Players.LocalPlayer
local Character = plr.Character or plr.CharacterAdded:Wait()	
local Humanoid = Character and Character:WaitForChild("Humanoid")
local WalkSpeed = 150
local JumpPower = 150

plr.CharacterAdded:Connect(function(Char)
    Character = Char
    Humanoid = Character:WaitForChild("Humanoid")

    -- Cập nhật tốc độ và sức bật ngay khi nhân vật xuất hiện
    if WalkSpeed then
        Humanoid.WalkSpeed = WalkSpeed
    end
    if JumpPower then
        Humanoid.JumpPower = JumpPower
    end
end)

game:GetService("RunService").Stepped:Connect(function()
    if Character and Humanoid then
        -- Giữ tốc độ chạy cố định
        if Humanoid.WalkSpeed ~= WalkSpeed then
            Humanoid.WalkSpeed = WalkSpeed
        end
        
        -- Giữ sức bật cố định
        if Humanoid.JumpPower ~= JumpPower then
            Humanoid.JumpPower = JumpPower
        end
    end
end)

plr.CharacterAdded:Connect(function(Char)
    Character = Char
    Humanoid = Character:WaitForChild("Humanoid")

    -- Đặt lại tốc độ ngay lập tức
    task.wait(0.1) -- Chờ game cập nhật xong
    Humanoid.WalkSpeed = WalkSpeed
    Humanoid.JumpPower = JumpPower
end)

--// Tween \\--
local function GetDistance(Endpoint)
    if typeof(Endpoint) == "Instance" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    elseif typeof(Endpoint) == "CFrame" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    end
    local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    return Magnitude
end

function Tween(Endpoint)
  if typeof(Endpoint) == "Instance" then
        Endpoint = Endpoint.CFrame
    end
    local TweenFunc = {}
    local Distance = GetDistance(Endpoint)
    local TweenInfo = TweenInfo.new(Distance / getgenv().tweenspeed, Enum.EasingStyle.Linear)

    local targetCFrame = Endpoint

    -- Giữ nguyên hướng nhìn khi ở chế độ "Above" hoặc "Below"
    if FarmMethod == "Above" then
        targetCFrame = CFrame.new(Endpoint.Position) * CFrame.Angles(math.rad(-90), 0, 0)
    elseif FarmMethod == "Below" then
        targetCFrame = CFrame.new(Endpoint.Position) * CFrame.Angles(math.rad(90), 0, 0)
    end

    local TweenObj = game:GetService("TweenService"):Create(
        game.Players.LocalPlayer.Character.HumanoidRootPart, 
        TweenInfo, 
        { CFrame = targetCFrame }
    )
    TweenObj:Play()

    function TweenFunc:Cancel()
        TweenObj:Cancel()
        return false
    end

    if Distance <= 100 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = targetCFrame
        TweenObj:Cancel()
        return false
    end

    return TweenFunc
end

local function EnableAntiFall()
    local plr = game.Players.LocalPlayer
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = plr.Character.HumanoidRootPart
    if not humanoidRootPart:FindFirstChild("BodyVelocity") then
        local antifall = Instance.new("BodyVelocity")
        antifall.Velocity = Vector3.new(0, 0, 0)
        antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        antifall.Name = "BodyVelocity"
        antifall.Parent = humanoidRootPart
    end
end

local function DisableAntiFall()
    local plr = game.Players.LocalPlayer
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = plr.Character.HumanoidRootPart
    local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
    local antifall = humanoidRootPart:FindFirstChild("BodyVelocity")

    -- Xóa lực AntiFall nếu tồn tại
    if antifall then
        antifall:Destroy()
        task.wait(0.1) -- Chờ một chút để chắc chắn rằng BodyVelocity đã bị xóa
    end

    -- Đặt lại vận tốc để tránh bị giữ lại bởi lực cũ
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    humanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)

    -- Đảm bảo nhân vật có thể di chuyển
    if humanoid then
        humanoid.PlatformStand = false  -- Ngăn trạng thái đứng yên cứng
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)  -- Đưa nhân vật về trạng thái bình thường
        task.wait(0.1)  -- Chờ một chút để trạng thái được cập nhật

        -- Nhảy ngay lập tức để kiểm tra xem có bị khóa không
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end


--// Get Closest \\---
function IsEntitySelected(entity, selectedEntities)
    for _, selectedEntity in ipairs(selectedEntities) do
        if entity.Name == selectedEntity then
            return true
        end
    end
    return false
end



function getclosest(selectedEntities, parentFolder)
    local closestEntity = nil
    local closestDistance = math.huge

    local entities = parentFolder:GetDescendants()

    for i, entity in ipairs(entities) do
        if entity:IsA("Model") and IsEntitySelected(entity, selectedEntities) then
            local entityName = entity.Name
            local humanoid = entity:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local entityCFrame = entity:GetModelCFrame()
                local distance = (entityCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestEntity = entity
                end
            end
        end
    end

    return closestEntity
end

--// Main Script \\--
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Subs = library.subs
local IsOpen = Subs.Wait

local Window = library:CreateWindow({
    Name = "HackerLor | GhoulNoob",
    Themeable = {
        Info = "VTrungHackerLor",
        Credit = false,
        Background = "",
        Visible = true
    }
})

--// Main Tab \\--
local MainTab = Window:CreateTab({Name = "Main"})
local MainSection = MainTab:CreateSection({Name = "Farming"})
local Settings = MainTab:CreateSection({Name = "Settings"})
local KillAura = MainTab:CreateSection({Name = "Kill Aura", Side = "Right"})


--// Misc Tab \\--
local MiscTab = Window:CreateTab({Name = "Misc"})
local MiscSection = MiscTab:CreateSection({Name = "Misc"})
local SpeedAndJump = MiscTab:CreateSection({Name = "Speed&Jump", Side = "Right"})
local Ect = MiscTab:CreateSection({Name = "Ect", Side = "Left"})

--ServerHop--
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local placeId = game.PlaceId
local localPlayer = Players.LocalPlayer
local visitedServers = {}
local hopCooldown = 5

local isTeleporting = false

local currentJobId = game.JobId 

local function hopToLowPopServer()
    if isTeleporting then return end

    local success, servers = pcall(function()
        return HttpService:JSONDecode(
            game:HttpGet("https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100")
        )
    end)

    if success and servers and servers.data then
        for _, server in ipairs(servers.data) do
            local serverId = server.id
            local playerCount = server.playing

            if serverId ~= currentJobId and playerCount >= 1 and playerCount <= 2 and not visitedServers[serverId] then
                visitedServers[serverId] = true
                isTeleporting = true
                TeleportService:TeleportToPlaceInstance(placeId, serverId, localPlayer)
                break
            end
        end
    end
end



-- Gắn vào toggle
local hopEnabled = false
MiscSection:AddToggle({
    Name = "Server Hop",
    Flag = "AutoHop",
    Callback = function(v)
        hopEnabled = v
        if hopEnabled then
            task.spawn(function()
                while hopEnabled do
                    hopToLowPopServer()
                    task.wait(hopCooldown)
                end
            end)
        end
    end
})


--// Settings \\--
Settings:AddDropdown({
    Name = "Farm Method",
    List = {"Above","Behind","Below"},
    Flag = "FarmMethodSelection",
    Nothing = "Select Method...",
	Value = "Above",
    Callback = function(Chosen)
        FarmMethod = Chosen 
    end
})

Settings:AddSlider({
    Name = "Distance",
    Flag = "DistanceSlider",
    Value = 10,
    Min = 1,
    Max = 200,
    Textbox = true,
    Callback = function(Value)
        getgenv().Distance = Value
    end
})

Settings:AddSlider({
    Name = "Tween Speed",
    Flag = "TweenSlider",
    Value = 300,
    Min = 150,
    Max = 500,
    Textbox = true,
    Callback = function(Value)
        getgenv().tweenspeed = Value
    end
})

SpeedAndJump:AddSlider({
    Name = "WalkSpeed",
    Value = 150,
    Min = 16,
    Max = 300,
    Flag = "WalkSpeed",
	Textbox = true,
    Callback = function(State)
        WalkSpeed = State
        if game.Players.LocalPlayer.Character then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = WalkSpeed
            end
        end
    end
})

SpeedAndJump:AddSlider({
    Name = "JumpPower",
    Value = 50,
    Min = 50,
    Max = 1000,
    Flag = "JumpPower",
	Textbox = true,
    Callback = function(State)
        JumpPower = State
        if game.Players.LocalPlayer.Character then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.JumpPower = JumpPower
            end
        end
    end
})

local autoQuest = false
local fixedPosition = Vector3.new(7693.7041, 26.34376, -692.12549)

MainSection:AddToggle({
    Name = "Auto Accept Quest (ClickDetector)",
    Flag = "AutoQuestClickFixed",
    Callback = function(v)
        autoQuest = v
        if autoQuest then
            task.spawn(function()

                local function getBoardPosition(obj)
                    if obj:IsA("Model") then
                        return obj:GetPivot().Position
                    elseif obj:IsA("BasePart") then
                        return obj.Position
                    end
                    return nil
                end

                while autoQuest do
                    local board = nil
                    local a = workspace.MissionBoards.CCG.MissionBoard
                    local b = workspace.MissionBoards.CCG:GetChildren()[2]

                    local posA = getBoardPosition(a)
                    local posB = getBoardPosition(b)

                    if a and posA and (posA - fixedPosition).Magnitude < 1 then
                        board = a
                    elseif b and posB and (posB - fixedPosition).Magnitude < 1 then
                        board = b
                    end

                    if not board then
                        print("[DEBUG] ❌ Không tìm thấy mission board tại vị trí chuẩn")
                        task.wait(1)
                        continue
                    end

                    local holder = board:FindFirstChild("Holder")
                    if not holder then
                        print("[DEBUG] ❌ Holder not found")
                        task.wait(1)
                        continue
                    end

                    local foundHard = false
                    for i = 1, 10 do
                        local part = holder:FindFirstChild(tostring(i))
                        if not part then
                            print("[DEBUG] 🔍 Holder[" .. i .. "] not found")
                            continue
                        end

                        local gui = part:FindFirstChild("SurfaceGui")
                        local rating = gui and gui:FindFirstChild("Rating")
                        if not rating or not rating:IsA("TextLabel") then
                            print("[DEBUG] ❌ Rating missing or invalid at number " .. i)
                            continue
                        end

                        print("[DEBUG] ✅ Rating at [" .. i .. "]:", rating.Text)

                        if rating.Text == "Hard" then
                            local detector = part:FindFirstChild("ClickDetector")
                            if detector then
                                print("[DEBUG] 🖱️ Clicking Holder[" .. i .. "]")
                                fireclickdetector(detector)
                                foundHard = true
                                break
                            else
                                print("[DEBUG] ❌ No ClickDetector at number " .. i)
                            end
                        end
                    end

                    if not foundHard then
                        print("[DEBUG] 😢 No 'Hard' mission found this round")
                    end

                    task.wait(10)
                end
            end)
        end
    end
})
-- Khai báo services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer

-- Biến điều khiển
local tweenToTatara = false
local loopRunning = false
local isAttacking = false
local floatAttachment, velocityAttachment, currentTween

-- Hàm AutoAttack với guard chống chồng coroutine
local function doCombat()
    if isAttacking or not tweenToTatara then return end
    isAttacking = true

    local mousePos = UserInputService:GetMouseLocation()
    for i = 1, 4 do
        if not tweenToTatara then break end
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        task.wait(0.05)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        task.wait(0.25)
    end

    if tweenToTatara then
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
        task.wait(0.1)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
    end

    isAttacking = false
end

-- Hàm tính toán thời gian tween đến Boss Arenas với tốc độ cố định
local function getTweenInfoToBoss(targetPosition)
    local character = LocalPlayer.Character
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Tính khoảng cách giữa nhân vật và Boss Arenas
    local distance = (humanoidRootPart.Position - targetPosition).Magnitude
    
    -- Đặt tốc độ cố định cho tween (đơn vị: studs/s)
    local fixedSpeed = 200  -- Tốc độ cố định (ví dụ: 100 studs mỗi giây)
    
    -- Tính thời gian tween dựa trên khoảng cách và tốc độ
    local timeToReach = distance / fixedSpeed
    
    -- Tạo TweenInfo với thời gian tính được
    return TweenInfo.new(timeToReach, Enum.EasingStyle.Linear)
end

-- Hàm tween đến boss và giữ trạng thái
local function startTweenToTataraLoop()
    if loopRunning then return end
    loopRunning = true

    task.spawn(function()
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local HRP = character:WaitForChild("HumanoidRootPart")

        -- Khởi tạo noclip + freeze
        humanoid.PlatformStand = true
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then part.CanCollide = false end
        end

        -- Bật noclip: tắt va chạm liên tục
        local noclipConn = RunService.Stepped:Connect(function()
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)

        -- Kiểm tra Place ID và nếu đúng, thực hiện tween đến tọa độ cụ thể (Boss Arenas)
        if game.PlaceId == 91797414023830 then
            -- Tọa độ của Boss Arenas
            local targetPosition = Vector3.new(7714.44287109375, -6.475745677947998, -984.05029296875)

            -- Tính toán thời gian tween và tạo tween đến Boss Arenas
            local bossTweenInfo = getTweenInfoToBoss(targetPosition)
            local tween = TweenService:Create(HRP, bossTweenInfo, {CFrame = CFrame.new(targetPosition)})
            tween:Play()
            tween.Completed:Wait()

            print("[TWEEN] Đã di chuyển tới Boss Arenas.")

            -- Sau khi di chuyển đến Boss Arenas, nhấn phím E để chọn Boss Tatara
            task.wait(0.5) -- Đảm bảo thời gian hoàn tất tween trước khi nhấn E
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)  -- Nhấn E
            task.wait(0.2)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game) -- Thả phím E

            print("[INPUT] Đã nhấn phím E để chọn Boss Tatara.")
        else
            warn("[PLACE ID] Đoạn mã này chỉ áp dụng cho Place ID 91797414023830.")
        end

        while tweenToTatara do
            -- Cập nhật khi respawn
            if LocalPlayer.Character ~= character then
                character = LocalPlayer.Character
                humanoid = character:WaitForChild("Humanoid")
                HRP = character:WaitForChild("HumanoidRootPart")
                humanoid.PlatformStand = true
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then part.CanCollide = false end
                end
            end

            -- Mở Blade nếu ẩn
            local entity = workspace.Entities:FindFirstChild(LocalPlayer.Name)
            if entity and entity:FindFirstChild("Weapon") and entity.Weapon:FindFirstChild("Blade") and entity.Weapon.Blade.Transparency == 1 then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
                task.wait(0.2)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
            end

            -- Kiểm tra HP để quyết định tween hoặc dừng loop
            local percent = humanoid.Health / humanoid.MaxHealth * 100
            if percent < 90 then
                -- Khi HP dưới 90%, thực hiện lơ lửng
                local hoverPos = Vector3.new(HRP.Position.X+200, 250, HRP.Position.Z+200)
                local hoverTween = TweenService:Create(HRP, TweenInfo.new(0.5, Enum.EasingStyle.Linear), {CFrame = CFrame.new(hoverPos)})
                hoverTween:Play()
                hoverTween.Completed:Wait()

                -- Tạo attachments giữ lơ lửng
                local gyro = Instance.new("BodyGyro")
                gyro.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
                gyro.P = 1e5
                gyro.CFrame = HRP.CFrame
                gyro.Parent = HRP

                local velocity = Instance.new("BodyVelocity")
                velocity.MaxForce = Vector3.new(1e9, 1e9, 1e9)
                velocity.Velocity = Vector3.new(0, 0, 0)  -- Tạo trạng thái đứng yên
                velocity.P = 1e5
                velocity.Parent = HRP

                -- Giữ trạng thái lơ lửng trong 3 giây
                task.wait(3)  -- Điều chỉnh thời gian nếu cần

                -- Dọn dẹp trạng thái lơ lửng
                gyro:Destroy()
                velocity:Destroy()

                -- Tiến hành Tween xuống dưới địa ngục
                local fallPos = CFrame.new(-40.604, -1000.723, 926.546)
                local fallTween = TweenService:Create(HRP, TweenInfo.new(2, Enum.EasingStyle.Linear), {CFrame = fallPos})
                fallTween:Play()
                fallTween.Completed:Wait()

                -- Ngắt noclip sau khi hoàn tất
                noclipConn:Disconnect()

                break
            end

            -- Kiểm tra nếu Replay xuất hiện và ngừng doCombat
            checkAndStopCombat()

            -- Tìm boss và Tween nếu cần
            local bossModel
            for _, e in ipairs(workspace.Entities:GetChildren()) do
                if e.Name:match("^Tatara_") then bossModel = e break end
            end
            local bossRig = bossModel and bossModel:FindFirstChild("TataraBossRig")
            local targetPart = bossRig and (bossRig.PrimaryPart or bossRig:FindFirstChild("HumanoidRootPart"))

            if percent >= 100 and targetPart then
                local dist = (HRP.Position - targetPart.Position).Magnitude
                if dist > 10 then
                    if currentTween then currentTween:Cancel() end
                    currentTween = TweenService:Create(HRP, TweenInfo.new(0.5, Enum.EasingStyle.Linear), {CFrame = targetPart.CFrame + Vector3.new(0, -15, 2)})
                    currentTween:Play()
                    currentTween.Completed:Wait()
                end
            end

            -- Giữ đứng yên
            if floatAttachment then floatAttachment:Destroy() end
            if velocityAttachment then velocityAttachment:Destroy() end
            floatAttachment = Instance.new("BodyGyro", HRP)
            floatAttachment.MaxTorque = Vector3.new(1e6,1e6,1e6)
            velocityAttachment = Instance.new("BodyVelocity", HRP)
            velocityAttachment.MaxForce = Vector3.new(1e6,1e6,1e6)
            velocityAttachment.Velocity = Vector3.new()

            task.wait(0.3)
        end

        -- Dọn dẹp trạng thái khi loop kết thúc
        loopRunning = false
        if currentTween then currentTween:Cancel() currentTween = nil end
        if floatAttachment then floatAttachment:Destroy() floatAttachment = nil end
        if velocityAttachment then velocityAttachment:Destroy() velocityAttachment = nil end
        humanoid.PlatformStand = false
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then part.CanCollide = true end
        end
    end)
end

-- Theo dõi HP để start loop và autoattack
RunService.Heartbeat:Connect(function()
    local char = LocalPlayer.Character
    local humanoid = char and char:FindFirstChildOfClass("Humanoid")
    local percent = humanoid and humanoid.Health / humanoid.MaxHealth * 100 or 0

    if tweenToTatara and not loopRunning and percent >= 100 then
        startTweenToTataraLoop()
    end

    if tweenToTatara and percent >= 90 and not getTweenInfoToBoss then
        doCombat()
    end
end)

-- Toggle UI để bật/tắt logic
MainSection:AddToggle({
    Name = "Tween To Tatara Boss",
    Default = false,
    Callback = function(val)
        tweenToTatara = val
        if tweenToTatara then
            startTweenToTataraLoop()
        end
    end
})

